<!--

         Copyright (C) 2016 DataStax Inc.

      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
      You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      See the License for the specific language governing permissions and
      limitations under the License.

-->
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

    <modelVersion>4.0.0</modelVersion>

    <groupId>com.datastax.cassandra</groupId>
    <artifactId>com.datastax.driver.examples.rcp.parent</artifactId>
    <version>1.0.0-SNAPSHOT</version>

    <packaging>pom</packaging>
    <name>DataStax Java Driver for Apache Cassandra Examples - Tycho - Parent</name>
    <description>An example application using the DataStax Java Driver and built with Tycho and Eclipse RCP.</description>

    <url>https://github.com/datastax/java-driver-examples-osgi</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <driver.version>3.0.2</driver.version>
        <tycho.version>0.25.0</tycho.version>
        <osgi.version>6.0.0</osgi.version>
        <guava.version>19.0</guava.version>
        <snappy.version>1.1.2.6</snappy.version>
        <lz4.version>1.3.0</lz4.version>
        <hdr.version>2.1.9</hdr.version>
        <slf4j.version>1.7.12</slf4j.version>
        <logback.version>1.1.2</logback.version>
        <junit.version>4.12</junit.version>
        <assertj.version>3.4.1</assertj.version>
        <mockito.version>1.10.19</mockito.version>
        <cassandra.contactpoints>127.0.0.1</cassandra.contactpoints>
        <main.basedir>${project.basedir}</main.basedir>
    </properties>

    <modules>
        <module>com.datastax.driver.examples.rcp.mailbox</module>
        <module>com.datastax.driver.examples.rcp.mailbox.tests</module>
    </modules>

    <repositories>

        <repository>
            <id>eclipse</id>
            <layout>p2</layout>
            <url>http://download.eclipse.org/eclipse/updates/4.5</url>
        </repository>

    </repositories>

    <dependencies>

        <!-- direct dependencies -->

        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.core</artifactId>
            <version>${osgi.version}</version>
        </dependency>

        <dependency>
            <groupId>com.datastax.cassandra</groupId>
            <artifactId>cassandra-driver-core</artifactId>
            <version>${driver.version}</version>
        </dependency>

        <dependency>
            <groupId>com.datastax.cassandra</groupId>
            <artifactId>cassandra-driver-mapping</artifactId>
            <version>${driver.version}</version>
        </dependency>

        <dependency>
            <groupId>com.datastax.cassandra</groupId>
            <artifactId>cassandra-driver-extras</artifactId>
            <version>${driver.version}</version>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <!-- driver optional dependencies -->

        <dependency>
            <groupId>net.jpountz.lz4</groupId>
            <artifactId>lz4</artifactId>
            <version>${lz4.version}</version>
        </dependency>

        <!--
        test dependencies
        Note that Tycho does not consider dependencies
        in 'test' scope when provisioning the target platform;
        however it is possible to place them in 'provided' scope.
        -->

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>${mockito.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
            <scope>provided</scope>
        </dependency>

    </dependencies>

    <build>

        <!-- Following Tycho's conventions, test classes should be compiled to target/classes-->
        <testOutputDirectory>${project.build.outputDirectory}</testOutputDirectory>

        <plugins>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.10</version>
                <executions>
                    <execution>
                        <id>add-integration-test-sources</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>src/it/java</source>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-integration-test-resources</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>add-test-resource</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <filtering>true</filtering>
                                    <directory>src/it/resources</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.eclipse.tycho</groupId>
                <artifactId>tycho-maven-plugin</artifactId>
                <version>${tycho.version}</version>
                <extensions>true</extensions>
            </plugin>

            <plugin>
                <groupId>org.eclipse.tycho</groupId>
                <artifactId>tycho-compiler-plugin</artifactId>
                <version>${tycho.version}</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.eclipse.tycho</groupId>
                <artifactId>target-platform-configuration</artifactId>
                <version>${tycho.version}</version>
                <configuration>
                    <pomDependencies>consider</pomDependencies>
                    <dependency-resolution>
                        <optionalDependencies>require</optionalDependencies>
                        <!--
                        explicitly add LZ4 library to target platform
                        as Tycho is not able to resolve it because
                        it's transitive *and* optional
                        -->
                        <extraRequirements>
                            <requirement>
                                <id>lz4-java</id>
                                <versionRange>${lz4.version}</versionRange>
                                <type>eclipse-plugin</type>
                            </requirement>
                        </extraRequirements>
                    </dependency-resolution>
                    <environments>
                        <environment>
                            <os>linux</os>
                            <ws>gtk</ws>
                            <arch>x86</arch>
                        </environment>
                        <environment>
                            <os>linux</os>
                            <ws>gtk</ws>
                            <arch>x86_64</arch>
                        </environment>
                        <environment>
                            <os>win32</os>
                            <ws>win32</ws>
                            <arch>x86</arch>
                        </environment>
                        <environment>
                            <os>win32</os>
                            <ws>win32</ws>
                            <arch>x86_64</arch>
                        </environment>
                        <environment>
                            <os>macosx</os>
                            <ws>cocoa</ws>
                            <arch>x86_64</arch>
                        </environment>
                    </environments>
                </configuration>
            </plugin>

            <!-- re-enable unit tests execution (Tycho disables them by default) -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.19.1</version>
                <executions>
                    <execution>
                        <id>unit-tests</id>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <includes>
                        <include>**/*Test.java</include>
                    </includes>
                    <!-- Following Tycho's conventions, test classes are compiled to target/classes-->
                    <classesDirectory>${project.build.outputDirectory}</classesDirectory>
                </configuration>
            </plugin>

            <!-- integration tests -->
            <plugin>
                <groupId>org.eclipse.tycho</groupId>
                <artifactId>tycho-surefire-plugin</artifactId>
                <version>${tycho.version}</version>
                <configuration>
                    <useUIHarness>false</useUIHarness>
                    <useUIThread>false</useUIThread>
                    <systemProperties>
                        <!-- @formatter:off -->
                        <cassandra.contactpoints>${cassandra.contactpoints}</cassandra.contactpoints>
                        <logback.configurationFile>file://${basedir}/src/it/resources/logback-test.xml</logback.configurationFile>
                        <!-- @formatter:on -->
                    </systemProperties>
                    <includes>
                        <include>**/*IT.java</include>
                    </includes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>3.0.1</version>
                <extensions>true</extensions>
                <inherited>true</inherited>
                <configuration>
                    <instructions>
                        <!-- @formatter:off -->
                        <Bundle-SymbolicName>${project.artifactId};singleton:=true</Bundle-SymbolicName>
                        <Bundle-ActivationPolicy>lazy</Bundle-ActivationPolicy>
                        <Bundle-RequiredExecutionEnvironment>JavaSE-1.8</Bundle-RequiredExecutionEnvironment>
                        <Bundle-Version>1.0.0.qualifier</Bundle-Version>
                        <_removeheaders>Bnd-LastModified,Build-Jdk,Built-By,Created-By,Tool</_removeheaders>
                        <_snapshot>qualifier</_snapshot>
                        <!-- @formatter:on -->
                    </instructions>
                    <supportedProjectTypes>
                        <supportedProjectType>eclipse-plugin</supportedProjectType>
                        <supportedProjectType>eclipse-test-plugin</supportedProjectType>
                    </supportedProjectTypes>
                    <niceManifest>true</niceManifest>
                    <manifestLocation>${project.basedir}/META-INF</manifestLocation>
                </configuration>
            </plugin>

            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>2.11</version>
                <configuration>
                    <header>${main.basedir}/src/license/header.txt</header>
                    <includes>
                        <include>src/**/*.java</include>
                        <include>src/**/*.xml</include>
                        <include>src/**/*.properties</include>
                        <include>**/pom.xml</include>
                    </includes>
                    <mapping>
                        <java>SLASHSTAR_STYLE</java>
                        <properties>SCRIPT_STYLE</properties>
                    </mapping>
                    <strictCheck>true</strictCheck>
                </configuration>
                <executions>
                    <execution>
                        <id>check-license</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>

    </build>

    <licenses>
        <license>
            <name>Apache 2</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
            <comments>Apache License Version 2.0</comments>
        </license>
    </licenses>

    <scm>
        <connection>scm:git:git@github.com:datastax/java-driver.git</connection>
        <developerConnection>scm:git:git@github.com:datastax/java-driver.git</developerConnection>
        <url>https://github.com/datastax/java-driver</url>
        <tag>HEAD</tag>
    </scm>

    <developers>
        <developer>
            <name>Various</name>
            <organization>DataStax</organization>
        </developer>
    </developers>


</project>
